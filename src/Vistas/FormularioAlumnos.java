/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import AccesoADatos.*;
import Entidades.Alumno;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author nstut
 */
public class FormularioAlumnos extends javax.swing.JInternalFrame {

    /**
     * Creates new form GestionAlumnos
     */
    public FormularioAlumnos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     * Cambio para pedro
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfId = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jtfDni = new javax.swing.JTextField();
        jtfApellido = new javax.swing.JTextField();
        jtfNombre = new javax.swing.JTextField();
        jrInsc = new javax.swing.JRadioButton();
        jbBuscar = new javax.swing.JButton();
        jbModificar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jbNuevo = new javax.swing.JButton();
        fechNac = new com.toedter.calendar.JDateChooser();

        jLabel1.setText("Alumno");

        jLabel2.setText("ID:");

        jtfId.setEditable(false);
        jtfId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfIdActionPerformed(evt);
            }
        });

        jLabel3.setText("DNI:");

        jLabel4.setText("Apellido:");

        jLabel5.setText("Nombre:");

        jLabel6.setText("Fecha de nacimiento:");

        jLabel7.setText("Activo: ");

        jtfDni.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfDniFocusGained(evt);
            }
        });
        jtfDni.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfDniMouseClicked(evt);
            }
        });
        jtfDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfDniActionPerformed(evt);
            }
        });

        jtfApellido.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfApellidoFocusGained(evt);
            }
        });
        jtfApellido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfApellidoMouseClicked(evt);
            }
        });
        jtfApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfApellidoActionPerformed(evt);
            }
        });

        jtfNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfNombreFocusGained(evt);
            }
        });
        jtfNombre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfNombreMouseClicked(evt);
            }
        });
        jtfNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNombreActionPerformed(evt);
            }
        });

        jrInsc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jrInscMouseClicked(evt);
            }
        });
        jrInsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrInscActionPerformed(evt);
            }
        });

        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbModificar.setText("Modificar");
        jbModificar.setEnabled(false);
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jbNuevo.setText("Nuevo");
        jbNuevo.setEnabled(false);
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        fechNac.setDateFormatString("yyyy-MM-dd");
        fechNac.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                fechNacAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        fechNac.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fechNacFocusGained(evt);
            }
        });
        fechNac.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fechNacMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                fechNacMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(53, 53, 53)
                        .addComponent(fechNac, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jbNuevo))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbModificar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbSalir))
                            .addComponent(jrInsc)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(97, 97, 97)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfId, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jtfDni, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(55, 55, 55)
                                        .addComponent(jbBuscar))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(49, 49, 49)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(75, 75, 75))
            .addGroup(layout.createSequentialGroup()
                .addGap(243, 243, 243)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jtfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(fechNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jrInsc))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalir)
                    .addComponent(jbNuevo)
                    .addComponent(jbModificar))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfDniActionPerformed
        
    }//GEN-LAST:event_jtfDniActionPerformed

    private void jtfIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfIdActionPerformed

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        AlumnoData alumData = new AlumnoData();
        Alumno alum = new Alumno ();
        
        try {
            if (comprobarCamposVacios ()){
                JOptionPane.showMessageDialog(this,"Todos los campos deben estar completos");
            } else {
                if (comprobarCadena(jtfNombre.getText()) || comprobarCadena(jtfApellido.getText())){
                    JOptionPane.showMessageDialog(this,"Los campos de Nombre y Apellido no pueden contener números.");
                } else {
                    alum.setDni(Integer.parseInt(jtfDni.getText()));
                    alum.setApellido(jtfApellido.getText());
                    alum.setNombre(jtfNombre.getText());

                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                    //Usamos esta clase para crear un string con el formato de fecha que queremos a partir de un dato tipo Date
                    SimpleDateFormat dateAString = new SimpleDateFormat("yyyy-MM-dd");
                    //Con el metodo .format() transformamos el dato Date a un string con el formato especificado arriba
                    String fecha = dateAString.format(fechNac.getDate());

                    alum.setFechaNacimiento(LocalDate.parse(fecha, formatter));
                    alum.setEstado(true);

                    alumData.guardarAlumno(alum);

                    vaciarCampos ();
                }
            }
        } catch (java.time.format.DateTimeParseException e) {
            JOptionPane.showMessageDialog(this, "Error al parsear");
        }
    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        AlumnoData alumn = new AlumnoData();
        Alumno alum = new Alumno();
        
        try{
            if (jtfDni.getText().isEmpty()){
                JOptionPane.showMessageDialog(this,"Debe escribir un DNI para buscarlo");
            } else {
                alum = alumn.buscarAlumnoPorDni(Integer.parseInt(jtfDni.getText()));   
                jtfId.setText(Integer.toString(alum.getIdAlumno()));
                jtfDni.setText(Integer.toString(alum.getDni()));
                jtfApellido.setText(alum.getApellido());
                jtfNombre.setText(alum.getNombre());

                LocalDate fecha = alum.getFechaNacimiento();
                fechNac.setDate(Date.from(fecha. //Transforma el valor Instant a Date.
                                atStartOfDay(ZoneId.systemDefault()) //Transforma LocalDate a LocalDateTime y el parametro ZoneId le indica que usa el parametro por defecto del sistema de zona horaria
                                .toInstant())); //Transforma el valor de fecha que ahora es LocalDateTime a Instant

                jrInsc.setSelected(alum.isEstado());

                permitirModifONuevo ();
            }    
        } catch (NullPointerException ex){
        }catch (NumberFormatException ex) {
             JOptionPane.showMessageDialog(this,"Complete los campos con el tipo de dato adecuado.");
            }
        
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        try {
            if (comprobarCamposVacios ()){
                    JOptionPane.showMessageDialog(this,"Todos los campos deben estar completos");
            } else {
                if (comprobarCadena(jtfNombre.getText()) || comprobarCadena(jtfApellido.getText())){
                    JOptionPane.showMessageDialog(this,"Los campos de Nombre y Apellido no pueden contener números.");
                } else {
                    AlumnoData alumData = new AlumnoData();
                    Alumno alum = new Alumno();
                    alum.setIdAlumno(Integer.parseInt(jtfId.getText()));
                    alum.setDni(Integer.parseInt(jtfDni.getText()));
                    alum.setApellido(jtfApellido.getText());
                    alum.setNombre(jtfNombre.getText());

                    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                    //Usamos esta clase para crear un string con el formato de fecha que queremos a partir de un dato tipo Date
                    SimpleDateFormat dateAString = new SimpleDateFormat("yyyy-MM-dd");
                    //Con el metodo .format() transformamos el dato Date a un string con el formato especificado arriba
                    String fecha = dateAString.format(fechNac.getDate());

                    alum.setFechaNacimiento(LocalDate.parse(fecha, formatter));
                    alum.setEstado(jrInsc.isSelected());

                    alumData.modificarAlumno(alum);

                    vaciarCampos ();
                }
            }
        } catch (NumberFormatException ex) {
             JOptionPane.showMessageDialog(this,"Complete los campos con el tipo de dato adecuado.");
            } catch (NullPointerException ex) {}
        
    }//GEN-LAST:event_jbModificarActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jtfApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfApellidoActionPerformed
        
    }//GEN-LAST:event_jtfApellidoActionPerformed

    private void jtfNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNombreActionPerformed
    
    }//GEN-LAST:event_jtfNombreActionPerformed

    private void fechNacAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_fechNacAncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_fechNacAncestorAdded

    private void fechNacFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fechNacFocusGained

    }//GEN-LAST:event_fechNacFocusGained

    private void jrInscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrInscActionPerformed
    
    }//GEN-LAST:event_jrInscActionPerformed

    private void jtfApellidoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfApellidoFocusGained
   
    }//GEN-LAST:event_jtfApellidoFocusGained

    private void jtfNombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfNombreFocusGained
    
    }//GEN-LAST:event_jtfNombreFocusGained

    private void jtfDniFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDniFocusGained
        
    }//GEN-LAST:event_jtfDniFocusGained

    private void jtfDniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfDniMouseClicked
        habilitarCamposIdDni ();
        inhabilitarNombre ();
        permitirModifONuevo ();
    }//GEN-LAST:event_jtfDniMouseClicked

    private void jtfApellidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfApellidoMouseClicked
        habilitarNombre ();
        inhabilitarCamposIdDni ();
        permitirModifONuevo ();
    }//GEN-LAST:event_jtfApellidoMouseClicked

    private void jtfNombreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfNombreMouseClicked
        habilitarNombre ();
        inhabilitarCamposIdDni ();
        permitirModifONuevo ();
    }//GEN-LAST:event_jtfNombreMouseClicked

    private void fechNacMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fechNacMouseClicked
        habilitarNombre ();
        inhabilitarCamposIdDni ();
        permitirModifONuevo ();
    }//GEN-LAST:event_fechNacMouseClicked

    private void jrInscMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jrInscMouseClicked
        habilitarNombre ();
        inhabilitarCamposIdDni ();
        permitirModifONuevo ();
    }//GEN-LAST:event_jrInscMouseClicked

    private void fechNacMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fechNacMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_fechNacMousePressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser fechNac;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JButton jbSalir;
    private javax.swing.JRadioButton jrInsc;
    private javax.swing.JTextField jtfApellido;
    private javax.swing.JTextField jtfDni;
    private javax.swing.JTextField jtfId;
    private javax.swing.JTextField jtfNombre;
    // End of variables declaration//GEN-END:variables

    private void inhabilitarCamposIdDni () {
        jtfId.setEnabled(false);
        jtfDni.setEnabled(false);
        
        jbBuscar.setEnabled(false);
    }
    private void inhabilitarNombre () {
        jtfNombre.setEnabled(false);
        jtfApellido.setEnabled(false);
        fechNac.setEnabled(false);
        jrInsc.setEnabled(false);
    }
    private void habilitarCamposIdDni () {
        jtfId.setEnabled(true);
        jtfDni.setEnabled(true);
        
        jbBuscar.setEnabled(true);
    }
    private void habilitarNombre () {
        jtfNombre.setEnabled(true);
        jtfApellido.setEnabled(true);
        fechNac.setEnabled(true);
        jrInsc.setEnabled(true);
    }
    private void permitirModifONuevo () {
        if (jtfId.getText().isEmpty()){
            jbModificar.setEnabled(false);
            jbNuevo.setEnabled(true);
        } else {
            jbModificar.setEnabled(true);
            jbNuevo.setEnabled(false);
        }
    }
    private void vaciarCampos () {
        jtfId.setText("");
        jtfDni.setText("");
        jtfApellido.setText("");
        jtfNombre.setText("");
        fechNac.setDate(null);
        jrInsc.setSelected(false);
    }
    private boolean comprobarCamposVacios () {
        if (jtfDni.getText().equals("")||
                jtfApellido.getText().equals("")||
                jtfNombre.getText().equals("")||
                fechNac.getDate()== null){
            return true;
        } else{
            return false;
        }
        }
    private boolean comprobarCadena ( String cadena){
        
         return cadena.matches(".*\\d.*");
    }
}
